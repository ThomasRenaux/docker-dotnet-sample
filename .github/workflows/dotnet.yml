# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore ./src/myWebApp.csproj
    - name: Build
      run: dotnet build ./src/myWebApp.csproj --configuration Release --no-restore
    - name: Test
      run: dotnet test ./src/myWebApp.csproj --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
    
    - name: Report test results
      uses: bibipkins/dotnet-test-reporter@v1.5.4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        comment-title: 'Unit Test Results'
        results-path: ./TestResults/*.trx
        coverage-path: ./TestResults/coverage.xml
        coverage-threshold: 80

#Docker 

    - name: Check for backend changes
      id: changes
      uses: dorny/paths-filter@v3
      with:
        filters: |
          backend:
            - 'src/**'
            - '!**/*.md'

    - name: Log in to Docker Hub
      if: steps.changes.outputs.backend == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      if: steps.changes.outputs.backend == 'true'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/mywebapp:latest
